@page "/account/posts"
@inherits Components.CustomBaseComponent
<h3>My posts</h3>
@if (!AuthState.isAuthenticated)
{
    <p>Sign in to see posts</p>
}
else
{
    if (_posts == null)
    {
        <p>Loading...</p>
    }
    else
    {
        <div>
            <h2 class="user__details_title">My posts</h2>
            <a class="button col-md-2" href="posts/edit">Create post</a>
            <div class="user__details_products">
                @if (_posts.Count < 1)
                {
                    <p>You don't have any posts</p>
                }
                @foreach (var post in _posts)
                {
                    <div class="products__content_item details">
                        <div class="item__description">
                            <div hidden="@(post.Category==null)" class="item_logo music_logo">@post.Category?.Name</div>
                            <h2 hidden="@(post.Title==null)" class="item__title">
                                @post.Title
                            </h2>
                            <h2 hidden="@(post.Price==0)" class="item__price">
                                @post.Price
                            </h2>
                            <p hidden="@(post.City==null)" class="item__text"><span>Location: </span> @post.City?.Name</p>
                            <p hidden="@(post.Address==null)" class="item__text"><span>Address: </span> @post.Address</p>
                            <p class="item__details ml-auto">
                                Published: @post.DatePublished
                            </p>

                        </div>
                        <div>
                            <a class="button" href=@($"posts/edit/{post.Id}")>Edit</a>
                            <a class="button" href=@($"posts/{post.Id}/items")>Modify additional information</a>
                            <a class="button" href=@($"posts/{post.Id}")>View details</a>

                        </div>
                    </div>
                }

            </div>
        </div>
    }



}

@code {
    private List<PostInfo> _posts;
    protected override async Task OnInitializedAsync()
    {
        if (AuthState.isAuthenticated)
        {
            var userId = await storage.GetItemAsync<string>("userId");
            var url = "https://localhost:44377/api/posts";
            var param = new Dictionary<string, string>() { { "Owner", $"{userId}" } };

            var newUrl = new Uri(QueryHelpers.AddQueryString(url, param));
            var response = await client.GetAsync(newUrl);
            if (response.IsSuccessStatusCode)
            {
                var responseStr = await response.Content.ReadAsStringAsync();

                _posts = JsonConvert.DeserializeObject<List<PostInfo>>(responseStr);
            }
        }

    }

}
