@page "/account/password"

@inherits Components.CustomBaseComponent

@if (AuthState.isAuthenticated)
{

    <div class="container">
        <div class="row justify-content-center">
            <EditForm Model="@_model" OnValidSubmit="@ChangePassword" class="col-lg-5 col-md-8 form">
                <h2 class="title">Change password</h2>
                <DataAnnotationsValidator />
                <ValidationSummary />
                <p hidden="@(_model.ErrorMessage==null)" class="item__text font-weight-bold error">@_model.ErrorMessage</p>
                <InputText @bind-Value="@_model.Password" placeholder="New password" class="input" type="password" />
                <input type="submit" value="Set new password" class="button" />
            </EditForm>
        </div>
    </div>
}
else
{
    <p>Sign in to change password</p>
}

@code {
    private ChangePassword _model = new ChangePassword();
    private async Task ChangePassword()
    {
        _model.Id = long.Parse(await storage.GetItemAsync<string>("userId"));
        var reply = await client.PutAsJsonAsync<ChangePassword>
         ($"api/users/account/password", _model);
        if (reply.IsSuccessStatusCode)
        {
            navManager.NavigateTo("/account");
        }
        else
        {
            _model.ErrorMessage = reply.Content.ReadAsStringAsync().Result;
        }
    }
}
