@page "/account/password"
@using FrontEndApp.Models
@inherits Components.CustomBaseComponent

<h3>PasswordChange</h3>
@if(AuthState.isAuthenticated)

    @if (_model.ErrorMessage != null)
    {
        <p>@_model.ErrorMessage</p>
    }
    <EditForm Model="@_model" OnValidSubmit="@ChangePassword">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <label for="password">Password</label>
        <InputText @bind-Value="@_model.Password" id="password" type="password" />
        <button type="submit" class="btn btn-primary">Change password</button>
    </EditForm>
}
else
{
    <p>Sign in to change password</p>
}

@code {
    private ChangePassword _model = new ChangePassword();
    private async Task ChangePassword()
    {
        _model.Id =int.Parse(await storage.GetItemAsync<string>("userId"));
        var reply = await client.PutAsJsonAsync<ChangePassword>
         ($"api/users/account/password", _model);
        if (reply.IsSuccessStatusCode)
        {
            navManager.NavigateTo("/account");
        }
        else
        {
            _model.ErrorMessage = reply.Content.ReadAsStringAsync().Result;
        }
    }
}
