@page "/account"
@using FrontEndApp.Pages.Shared
@inherits Components.CustomBaseComponent
@if (!AuthState.isAuthenticated)
{
    <h2 class="item__text">
        <a class="text-danger" href="registration">Sign up</a> or
        <a class="text-danger" href="login">Sign in</a>
        to see your account details
    </h2>
}
else
{
    if (_id == 0)
    {
        <p>Loading...</p>
    }
    else
    {
    <div class="d-flex flex-column align-items-center">
        <div class="products__content_item user__details details col-lg-6">
            <User Id="_id" />
            <div class="user_details">
                <input type="button" class="button" value="Sign out" @onclick="LogOut" />
                <input type="button" class="button btn-danger" value="Delete account" @onclick="DeleteUser" />
                <a class="button" href="@($"account/edit")">Edit account</a>
                <a class="button" href="@($"account/password")">Change password</a>
                <a class="button" href="@($"account/posts")">View my posts</a>
            </div>
        </div>
    </div>

    }

}

@code {
   private long _id;
   protected override async Task OnInitializedAsync()
    {
       if (AuthState.isAuthenticated)
       {
           _id = long.Parse(await storage.GetItemAsync<string>("userId"));

       }
   }
   private async Task DeleteUser()
   {
       var reply = await client.DeleteAsync($"api/users/account");
       if (reply.IsSuccessStatusCode)
       {
           await authService.LogOut();
           navManager.NavigateTo("/users");
       }

   }
   private async Task LogOut()
   {
       await authService.LogOut();
   }

}
