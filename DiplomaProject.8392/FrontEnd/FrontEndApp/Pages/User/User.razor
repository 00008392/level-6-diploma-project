@page "/users/{Id:long}"

@inherits Components.CustomBaseComponent

@if (_user == null)
{
    <p>Loading...</p>
}
else
{
    <ul>
        <li><b>First name:</b> @_user.FirstName</li>
        <li><b>Last name:</b> @_user.LastName</li>
        <li><b>Email:</b> @_user.Email</li>
        <li><b>Date of birth:</b> @_user.DOB</li>
        <li><b>Date of registration:</b> @_user.RegistrationDate</li>
        <li><b>Gender:</b> @_user.Gender</li>
        <li><b>Phone number:</b> @_user.PhoneNumber</li>
        <li><b>Address:</b> @_user.Address</li>
        <li><b>Country:</b>@(_user.Country != null? _user.Country.Name:"") </li>
        <li><b>Additional information:</b> @_user.Info</li>
    </ul>
    @if (DisplayFeedbackForm)
    {
        <FrontEndApp.Pages.Feedback.LeaveFeedback @ref="_feedbackComponent" UserId="(long)_user.Id"
                                                  OnFeedbackCreated="FeedbackCreatedEvent" />
    }
    <FrontEndApp.Pages.Feedback.Feedbacks @ref="_feedbacksComponent" UserId="_user.Id" />
}


@code {
    private UserInfo _user;
    private List<FeedbackInfo> _feedbacks = new List<FeedbackInfo>();
    [Parameter]
    public long Id { get; set; }
    [Parameter]
    public bool DisplayFeedbackForm { get; set; } = true;
    private FrontEndApp.Pages.Feedback.LeaveFeedback _feedbackComponent = new Feedback.LeaveFeedback();
    private FrontEndApp.Pages.Feedback.Feedbacks _feedbacksComponent = new Feedback.Feedbacks();
    protected override async Task OnInitializedAsync()
    {
        await GetUser();
    }
    protected override async Task OnParametersSetAsync()
    {
        await GetUser();
    }
    public async Task FeedbackCreatedEvent()
    {
        await _feedbacksComponent.RefreshFeedbacks();
    }
    private async Task GetUser()
    {
        var reply = await client.GetAsync($"api/users/{Id}");
        if (reply.IsSuccessStatusCode)
        {
            var responseStr = await reply.Content.ReadAsStringAsync();
            _user = JsonConvert.DeserializeObject<UserInfo>(responseStr);
        }
    }
}
