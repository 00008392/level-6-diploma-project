@using Models.User
@using Services.Feedback.Contracts 
@inherits Components.UserBaseComponent
@inject IFeedbackService<UserResponse> _feedbackService
<div class="aa-properties-info">
    @if (_user == null)
    {
        <div>
            <Circle Center="true" />
        </div>
    }
    else
    {
        <div hidden="@(_user.AverageRating==null)" class="aa-tag sold-out rating__tag">
            @_user.AverageRating <i class="fa fa-star"></i>
        </div>
        <h2 hidden="@(string.IsNullOrWhiteSpace(_user.FirstName)
                                  &&string.IsNullOrWhiteSpace(_user.LastName))" class="account__details_title">
            @_user.FirstName @_user.LastName
        </h2>
        <p hidden="@(string.IsNullOrWhiteSpace(_user.Email))" class="font-italic">@_user.Email</p>
        <p hidden="@(string.IsNullOrWhiteSpace(_user.PhoneNumber))" class="font-italic">@_user.PhoneNumber</p>
        <p hidden="@(string.IsNullOrWhiteSpace(_user.UserInfo))">@_user.UserInfo</p>
        <p hidden="@(_user.Gender==null)"><span class="font-weight-bold">Gender: </span>@_user.Gender</p>
        <p hidden="@(_user.DateOfBirth==null)"><span class="font-weight-bold">Birthday: </span>@(((DateTime)_user.DateOfBirth).ToShortDateString())</p>
        <p><span class="font-weight-bold">Registered on: </span>@(((DateTime)_user.RegistrationDate).ToShortDateString())</p>
        <p hidden="@(string.IsNullOrWhiteSpace(_user.CountryName))"><span class="font-weight-bold">Lives in: </span>@_user.CountryName</p>
        @if (!HideActionButtons)
        {
            <a hidden="@(string.IsNullOrWhiteSpace(_user.PhoneNumber))"
               class="submit__btn submit__btn-primary" href=@($"tel:{_user.PhoneNumber}")>Call</a>
            <a hidden="@(string.IsNullOrWhiteSpace(_user.Email))"
               class="submit__btn submit__btn-primary" href=@($"mailto:{_user.Email}")>Email</a>
        }
    }
</div>
@code {
    private UserResponse _user;
    [Parameter]
    public long Id { get; set; }
    //action buttons are displayed if user does not view his/her account
    [Parameter]
    public bool HideActionButtons { get; set; } = false;
    protected override async Task OnParametersSetAsync()
    {
        await GetUser();
    }
    private async Task GetUser()
    {
        //get user and get average rating for this user
        _user = await _service.GetUserAsync(Id, () => { _navManager.NavigateTo("/404"); });
        if(_user!=null)
            {
            var rating = await _feedbackService.GetAverageRatingAsync(Id);
            _user.AverageRating = rating;
            }

    }
}
