// <auto-generated />
using System;
using Booking.DAL.EF.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Booking.DAL.EF.Migrations
{
    [DbContext(typeof(BookingDbContext))]
    partial class BookingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Booking.Domain.Entities.Accommodation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BathroomsNo")
                        .HasColumnType("int");

                    b.Property<int?>("BedsNo")
                        .HasColumnType("int");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsWholeApartment")
                        .HasColumnType("bit");

                    b.Property<int>("MaxGuestsNo")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("MovingInTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("MovingOutTime")
                        .HasColumnType("time");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RoomsNo")
                        .HasColumnType("int");

                    b.Property<int?>("SquareMeters")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Accommodations");
                });

            modelBuilder.Entity("Booking.Domain.Entities.BookingRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccommodationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("GuestId")
                        .HasColumnType("bigint");

                    b.Property<int>("GuestNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccommodationId");

                    b.HasIndex("GuestId");

                    b.ToTable("BookingRequests");
                });

            modelBuilder.Entity("Booking.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BookingRequestUser", b =>
                {
                    b.Property<long>("BookingRequestsAsCoTravelerId")
                        .HasColumnType("bigint");

                    b.Property<long>("CoTravelersId")
                        .HasColumnType("bigint");

                    b.HasKey("BookingRequestsAsCoTravelerId", "CoTravelersId");

                    b.HasIndex("CoTravelersId");

                    b.ToTable("BookingRequestUser");
                });

            modelBuilder.Entity("Booking.Domain.Entities.Accommodation", b =>
                {
                    b.HasOne("Booking.Domain.Entities.User", "Owner")
                        .WithMany("Accommodations")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Booking.Domain.Entities.BookingRequest", b =>
                {
                    b.HasOne("Booking.Domain.Entities.Accommodation", "Accommodation")
                        .WithMany("BookingRequests")
                        .HasForeignKey("AccommodationId");

                    b.HasOne("Booking.Domain.Entities.User", "Guest")
                        .WithMany("BookingRequestsAsMainGuest")
                        .HasForeignKey("GuestId");

                    b.Navigation("Accommodation");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("BookingRequestUser", b =>
                {
                    b.HasOne("Booking.Domain.Entities.BookingRequest", null)
                        .WithMany()
                        .HasForeignKey("BookingRequestsAsCoTravelerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Booking.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("CoTravelersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Booking.Domain.Entities.Accommodation", b =>
                {
                    b.Navigation("BookingRequests");
                });

            modelBuilder.Entity("Booking.Domain.Entities.User", b =>
                {
                    b.Navigation("Accommodations");

                    b.Navigation("BookingRequestsAsMainGuest");
                });
#pragma warning restore 612, 618
        }
    }
}
